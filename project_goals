It should be software based 
It should be written in Golang ( use Go routines for parallelism)
It should be able to manage all local and global servers and containers
lightweight


I
-It should be configurable via a config file
-It should have:
	1) round robin (normal and weighted)
	2) Least Connections
-Circuit breaker 
-Health Checks for if the server is down [ HTTPS pings or health endpints or TCP connections (probably) ] 
-Rate limiting [ IP address and end point ]
-Hot Addition and removal of servers [ REST API interface (we'll see) ]
-Loging and monitoring ( access logs like response times, status codes,... can store into a database)


II
-look up auto scaling
-IP blacklisting
-Request queuing
-Request processing time out
-Exponential backoff
-It could also have:
	1) Sticky Round Robin
	2) IP/Url Hash


III
-Path based server routing
-Dashboard for load visualization or can integrate Prometheus
-Reverse proxy Graceful Shutdown
-Timeouts

Limit concurrency if used



File structure 

go-load-balancer/
├── cmd/
│   └── loadbalancer/
│       ├── main.go             # Entry point for the application
├── internal/
│   ├── balancer/
│   │   ├── balancer.go         # Core load balancing logic (round robin, least connections, etc.)
│   │   ├── strategy.go         # Different balancing strategies (Round Robin, etc.)
│   ├── server/
│   │   ├── server.go           # Server logic, routing requests to backend services
│   │   └── docker_server.go    # Server handling for Docker containers
│   │   └── baremetal_server.go # Server handling for bare metal servers
│   ├── config/
│   │   └── config.go           # Configuration loading and parsing logic
│   ├── healthcheck/
│   │   └── healthcheck.go      # Health checking logic for backends
│   └── utils/
│       └── logger.go           # Utility functions like logging
├── pkg/
│   ├── api/
│   │   └── handler.go          # API handler to manage the load balancer (optional)
├── config/
│   └── config.yaml             # Configuration file for backends, strategies, etc.
├── Dockerfile                   # Dockerfile if you containerize the load balancer
├── go.mod                       # Go module file
├── go.sum                       # Go dependencies checksum file
└── README.md                    # Project documentation

bombardier -c 125 -n 1000 http://localhost:8000